name: Publish fdroid repo

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 */2 * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v3

    - name: Setup keystore
      run: |
        echo "${{ secrets.KEYSTORE }}" | base64 -d > fdroid/keystore.jks
        chmod 600 fdroid/config.yml fdroid/keystore.jks
    
    - name: Install fdroid
      run: |
        sudo add-apt-repository -y ppa:fdroid/fdroidserver
        sudo apt update
        sudo apt install -y wget p7zip-full software-properties-common fdroidserver python3 python3-pip ca-certificates aapt androguard imagemagick

    - name: Force latest androguard
      run: |
        sudo python3 -m pip install --break-system-packages --force-reinstall --no-deps 'androguard'
        sudo python3 -m pip install --break-system-packages loguru apkInspector

    - name: Setup downloader deps
      run: |
        mkdir -p fdroid/repo
        python3 -m pip install --break-system-packages -r downloader/requirements.txt
        echo "${{ secrets.TG_SESSION }}" | base64 -d > main.session
        wget "https://github.com/REAndroid/APKEditor/releases/download/V1.2.7/APKEditor-1.2.7.jar" -O APKEditor.jar
        wget "https://github.com/iBotPeaches/Apktool/releases/download/v2.11.1/apktool_2.11.1.jar" -O apktool.jar

    - name: Patch fdroidserver
      run: |
        sudo patch -p1 -d/ < fdroid-update.py.patch
        ANDRO_PATH=$(python3 -c 'print(__import__("androguard").__file__.replace("/__init__.py", ""))')
        sudo ln -s $ANDRO_PATH/core/bytecode.py $ANDRO_PATH/core/bytecodes.py

    #- name: Restore APK cache
    #  uses: actions/cache@v3
    #  with:
    #    path: fdroid/repo
    #    key: ${{ runner.os }}-apk-cache-${{ github.sha }}
    #    restore-keys: |
    #      ${{ runner.os }}-apk-cache-

    - name: Fetch apks
      run: python3 ./downloader/main.py
      env:
        TG_ID: ${{ secrets.TG_ID }}
        TG_HASH: ${{ secrets.TG_HASH }}
        KEYSTOREPASS: ${{ secrets.KEYSTOREPASS }}

    #- name: Save APK cache
    #  uses: actions/cache@v3
    #  with:
    #    path: fdroid/repo
    #    key: ${{ runner.os }}-apk-cache-${{ github.sha }}

    - name: List apks
      run: ls -lah fdroid/repo/**.apk

    - name: Generate icon
      run: |
        for apk in fdroid/repo/**.apk; do
          python3 icon.py "$apk" "fdroid/repo" || true
        done

    - name: Build fdroid
      run: |
        cd fdroid
        echo "" >> config.py
        echo "keystorepass: ${KEYSTOREPASS}" >> config.yml
        echo "keypass: ${KEYSTOREPASS}" >> config.yml
        fdroid update \
          --create-metadata \
          --use-date-from-apk \
          --rename-apks \
          --verbose
        sudo mkdir /fdroid
        sudo chown $USER /fdroid
        fdroid deploy --verbose
        rm -rf /fdroid/archive
        cd ..
        mkdir public
        mv -v /fdroid/* public/
        cp index.html public/
        cp index.html public/repo/
        cp index.html public/404.html
      env:
        KEYSTOREPASS: ${{ secrets.KEYSTOREPASS }}

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: public

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
